{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsTypes.js","components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/section/SectionStyled.js","components/section/Section.js","components/App.js","redux/contacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["addToCart","createAction","removeFromCartByID","getAllContactsFromLocaleStorage","changeFilter","ContactFormStyled","styled","form","ContactForm","contacts","useState","name","setName","number","setNumber","dispatch","useDispatch","onHandleSubmit","e","preventDefault","onSubmit","id","uuidv4","contact","some","item","toLocaleLowerCase","alert","onHandleChange","target","value","method","type","pattern","title","required","onChange","onClick","ContactListStyled","ul","ContactList","useSelector","state","items","filter","deleteContact","toLowerCase","includes","map","className","FilterStyled","div","connect","SectionStyled","section","Section","children","contactsValue","JSON","parse","window","localStorage","getItem","App","useEffect","length","setItem","stringify","contactItemsReducer","createReducer","payload","filterReducer","_","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73707d1d.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nimport {\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART_BY_ID,\r\n  CHANGE_FILTER,\r\n  GET_ALL_CONTACTS_FROM_LOCAL_STORAGE,\r\n} from \"./contactsTypes.js\";\r\n\r\nconst addToCart = createAction(ADD_TO_CART);\r\nconst removeFromCartByID = createAction(REMOVE_FROM_CART_BY_ID);\r\nconst getAllContactsFromLocaleStorage = createAction(\r\n  GET_ALL_CONTACTS_FROM_LOCAL_STORAGE\r\n);\r\nconst changeFilter = createAction(CHANGE_FILTER);\r\n\r\nexport {\r\n  addToCart,\r\n  removeFromCartByID,\r\n  getAllContactsFromLocaleStorage,\r\n  changeFilter,\r\n};\r\n","const ADD_TO_CART = \"addToCart\";\r\nconst REMOVE_FROM_CART_BY_ID = \"removeFromCartByID\";\r\nconst CHANGE_FILTER = \"changeFilter\";\r\nconst GET_ALL_CONTACTS_FROM_LOCAL_STORAGE = \"getAllContactsFromLocaleStorage\";\r\n\r\nexport {\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART_BY_ID,\r\n  CHANGE_FILTER,\r\n  GET_ALL_CONTACTS_FROM_LOCAL_STORAGE,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactFormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  input,\r\n  button {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { addToCart } from \"../../redux/contacts/contactsActions\";\r\nimport { ContactFormStyled } from \"./ContactFormStyled\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ContactForm = ({ contacts }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number, id: uuidv4() });\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const onSubmit = (contact) => {\r\n    contacts.some(\r\n      (item) =>\r\n        item.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\r\n    )\r\n      ? alert(`${contact.name} is already in contacts.`)\r\n      : dispatch(addToCart(contact));\r\n  };\r\n\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContactFormStyled onSubmit={onHandleSubmit} method=\"post\">\r\n      <label>\r\n        Name\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onHandleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <br />\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onHandleChange}\r\n          value={number}\r\n        />\r\n      </label>\r\n      {name && (\r\n        <button type=\"submit\" onClick={onHandleSubmit}>\r\n          Add contact\r\n        </button>\r\n      )}\r\n    </ContactFormStyled>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactListStyled = styled.ul`\r\n  list-style: none;\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .text {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  button {\r\n    height: 25px;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactListStyled } from \"./ContactListStyled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeFromCartByID } from \"../../redux/contacts/contactsActions\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteContact = (e) => dispatch(removeFromCartByID(e.target.id));\r\n\r\n  const getVisibleContacts = () => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n  return (\r\n    <ContactListStyled>\r\n      {getVisibleContacts().map(({ name, number, id }) => (\r\n        <li key={id}>\r\n          <div className=\"wrapper\">\r\n            <p className=\"text\">\r\n              {name} {number}\r\n            </p>\r\n            <button type=\"button\" id={id} onClick={deleteContact}>\r\n              delete\r\n            </button>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  getVisibleContacts: PropTypes.func,\r\n  onDeleteContactById: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.div`\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/contactsActions\";\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  const onChangeFilter = (e) => {\r\n    const { value } = e.target;\r\n    changeFilter(value);\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      <label>\r\n        Find contacts by name\r\n        <br />\r\n        <input\r\n          value={filter}\r\n          onChange={onChangeFilter}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onFilterChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps, { changeFilter })(Filter);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n  border: 2px solid lightgrey;\r\n  border-radius: 10px;\r\n  width: 50%;\r\n\r\n  .title {\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"title\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAllContactsFromLocaleStorage } from \"../redux/contacts/contactsActions\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport Section from \"./section/Section\";\r\n\r\nconst contactsValue = JSON.parse(window.localStorage.getItem(\"contacts\")) || [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst App = () => {\r\n  const contacts = useSelector((state) => state.contacts.items);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (contacts.length) {\r\n      window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }, [contacts]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllContactsFromLocaleStorage(contactsValue));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm contacts={contacts} />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  addToCart,\r\n  changeFilter,\r\n  getAllContactsFromLocaleStorage,\r\n  removeFromCartByID,\r\n} from \"./contactsActions.js\";\r\n\r\nconst contactItemsReducer = createReducer([], {\r\n  [addToCart]: (state, { payload }) => [...state, payload],\r\n  [removeFromCartByID]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n  [getAllContactsFromLocaleStorage]: (state, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: contactItemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  // devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}